// used in reboot
@mixin hover-focus {
  @if $enable-hover-media-query {
    &:focus { @content };
    @include hover { @content };
  }
  @else {
    &:focus,
    &:hover {
      @content;
    }
  }
}

// used in reboot
// WebKit-style focus
@mixin tab-focus() {
	// Work around a Firefox/IE bug where the transparent `button` background
	// results in a loss of the default `button` focus styles.
	//
	// Credit: https://github.com/suitcss/base/
	// Default
	outline: thin dotted;
	// WebKit
	outline: 5px auto $focus-colour;//-webkit-focus-ring-color;
	outline-offset: -5px;
}

// used in grid
@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate
@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}

@mixin media-object(){
	@include clearfix();
	&-left{
		float: left;
		margin: 0 !important;
		margin-right: 20px !important;
	}
	&-right{
		overflow: hidden;
	}
}
@mixin media-object-mobile() {
	@include clearfix();
	&-left{
		display: block;
	}
	@include media-breakpoint-up(tablet) {
		&-left{
			float: left;
			margin: 0 !important;
			margin-right: 20px !important;
		}
		&-right{
			overflow: hidden;
		}
	}
}
